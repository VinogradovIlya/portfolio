.PHONY: help build up down restart logs clean test lint format migrate rebuild typecheck check fix env test-simple test-auth test-payments

COMPOSE_FILE = docker-compose.yml
SERVICE_WEB = web
SERVICE_DB = db

help:
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  rebuild   - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ + —Å–æ–±—Ä–∞—Ç—å + –∑–∞–ø—É—Å—Ç–∏—Ç—å + –º–∏–≥—Ä–∞—Ü–∏–∏"
	@echo "  up        - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã (–µ—Å–ª–∏ —É–∂–µ —Å–æ–±—Ä–∞–Ω—ã)"
	@echo "  down      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
	@echo "  logs      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
	@echo "  logs-web  - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤–µ–±-—Å–µ—Ä–≤–∏—Å–∞"
	@echo "  logs-db   - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
	@echo "  shell     - –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
	@echo "  db-shell  - –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL"
	@echo "  test      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã"
	@echo "  test-simple    - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç—ã"
	@echo "  test-auth      - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"
	@echo "  test-payments  - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –ø–ª–∞—Ç–µ–∂–µ–π"
	@echo "  format    - –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥"
	@echo "  lint      - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∏–ª—å –∫–æ–¥–∞"
	@echo "  typecheck - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∏–ø—ã (mypy)"
	@echo "  check     - –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞"

rebuild:
	@echo "üßπ –û—á–∏—â–∞–µ–º –≤—Å–µ..."
	docker-compose -f $(COMPOSE_FILE) down -v --remove-orphans
	docker system prune -f
	docker volume prune -f
	@echo "üî® –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã –±–µ–∑ –∫—ç—à–∞..."
	docker-compose -f $(COMPOSE_FILE) build --no-cache
	@echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
	docker-compose -f $(COMPOSE_FILE) up -d
	@echo "‚è≥ –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	sleep 10
	@echo "üìä –°–æ–∑–¥–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_WEB) rm -f alembic/versions/*.py || true
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_WEB) alembic revision --autogenerate -m "Initial migration" || true
	@echo "üóÉÔ∏è –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_WEB) alembic upgrade head || true
	@echo ""
	@echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ:"
	@echo "   üìñ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs"
	@echo "   üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost:8000"
	@echo "   üìä –°—Ç–∞—Ç—É—Å: http://localhost:8000/health"
	@echo ""

up:
	docker-compose -f $(COMPOSE_FILE) up -d

down:
	docker-compose -f $(COMPOSE_FILE) down

restart: down up

logs:
	docker-compose -f $(COMPOSE_FILE) logs -f

logs-web:
	docker-compose -f $(COMPOSE_FILE) logs -f $(SERVICE_WEB)

logs-db:
	docker-compose -f $(COMPOSE_FILE) logs -f $(SERVICE_DB)

shell:
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_WEB) /bin/bash

db-shell:
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_DB) psql -U user -d payment_db

test:
	@echo "üß™ –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã..."
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_WEB) pytest -v --tb=short

test-coverage:
    pytest --cov=app --cov-report=html --cov-report=term

test-simple:
	@echo "üß™ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç—ã..."
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_WEB) pytest tests/test_simple.py tests/test_main.py -v

test-auth:
	@echo "üß™ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏..."
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_WEB) pytest tests/test_auth.py -v

test-payments:
	@echo "üß™ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –ø–ª–∞—Ç–µ–∂–µ–π..."
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_WEB) pytest tests/test_payments.py -v

test-working:
	@echo "üß™ –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞–±–æ—á–∏–µ —Ç–µ—Å—Ç—ã..."
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_WEB) pytest tests/test_working.py -v

status:
	docker-compose -f $(COMPOSE_FILE) ps

format:
	black app/ tests/ alembic/
	isort app/ tests/ alembic/
	autopep8 --in-place --aggressive --recursive app/ tests/ alembic/
	@echo "–ö–æ–¥ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω!"

lint:
	flake8 app/ tests/ alembic/
	black --check app/ tests/ alembic/
	isort --check-only app/ tests/ alembic/
	@echo "–°—Ç–∏–ª—å –∫–æ–¥–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω!"

typecheck:
	mypy app/ || echo "Mypy –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (–º–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è)"

check: format lint #typecheck
	@echo "–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"

env:
	cp .env.example .env
	@echo ".env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏."

debug-test:
	@echo "üêõ –û—Ç–ª–∞–¥–∫–∞ —Ç–µ—Å—Ç–æ–≤..."
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_WEB) pytest -v -s --tb=long

clean-test:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_WEB) find . -name "*.pyc" -delete
	docker-compose -f $(COMPOSE_FILE) exec $(SERVICE_WEB) find . -name "__pycache__" -type d -exec rm -rf {} + || true
